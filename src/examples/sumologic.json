{
    "Description": "Cloudformation stack for streaming Cloudwatch logs to Sumologic",
    "Parameters": {
        "Stage": {
            "Description": "Deployment Stage Name",
            "Type": "String"
        },
        "SumoEndPointURL": {
            "Type": "String",
            "Description": "SUMO_ENDPOINT created while configuring HTTP Source"
        },
        "SumoIncludeLogGroupInfo": {
            "Type": "String",
            "AllowedValues": [
                "true",
                "false"
            ],
            "Description": "Select true to get loggroup/logstream values in logs"
        }
    },
    "Mappings": {
        "RegionMap": {
            "us-east-1": {
                "bucketname": "appdevzipfiles-us-east-1"
            },
            "us-east-2": {
                "bucketname": "appdevzipfiles-us-east-2"
            },
            "us-west-1": {
                "bucketname": "appdevzipfiles-us-west-1"
            },
            "us-west-2": {
                "bucketname": "appdevzipfiles-us-west-2"
            },
            "ap-south-1": {
                "bucketname": "appdevzipfiles-ap-south-1"
            },
            "ap-northeast-2": {
                "bucketname": "appdevzipfiles-ap-northeast-2"
            },
            "ap-southeast-1": {
                "bucketname": "appdevzipfiles-ap-southeast-1"
            },
            "ap-southeast-2": {
                "bucketname": "appdevzipfiles-ap-southeast-2"
            },
            "ap-northeast-1": {
                "bucketname": "appdevzipfiles-ap-northeast-1"
            },
            "ca-central-1": {
                "bucketname": "appdevzipfiles-ca-central-1"
            },
            "eu-central-1": {
                "bucketname": "appdevzipfiles-eu-central-1"
            },
            "eu-west-1": {
                "bucketname": "appdevzipfiles-eu-west-1"
            },
            "eu-west-2": {
                "bucketname": "appdevzipfiles-eu-west-2"
            },
            "eu-west-3": {
                "bucketname": "appdevzipfiles-eu-west-3"
            },
            "eu-north-1": {
                "bucketname": "appdevzipfiles-eu-north-1s"
            },
            "sa-east-1": {
                "bucketname": "appdevzipfiles-sa-east-1"
            }
        }
    },
    "Resources": {
        "SumoCWLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": "SumoCWLogGroup",
                "RetentionInDays": 7
            }
        },
        "SumoCWLogSubsriptionFilter": {
            "Type": "AWS::Logs::SubscriptionFilter",
            "Properties": {
                "LogGroupName": {
                    "Ref": "SumoCWLogGroup"
                },
                "DestinationArn": {
                    "Fn::GetAtt": [
                        "SumoCWLogsLambda",
                        "Arn"
                    ]
                },
                "FilterPattern": ""
            },
            "DependsOn": [
                "SumoCWLogGroup",
                "SumoCWLambdaPermission",
                "SumoCWLogsLambda"
            ]
        },
        "SumoCWLambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "SumoCWLogsLambda",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": {
                    "Fn::Join": [
                        ".",
                        [
                            "logs",
                            {
                                "Ref": "AWS::Region"
                            },
                            "amazonaws.com"
                        ]
                    ]
                },
                "SourceAccount": {
                    "Ref": "AWS::AccountId"
                }
            }
        },
        "SumoCWDeadLetterQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
                "QueueName": "SumoCWDeadLetterQueue"
            }
        },
        "SumoCWLambdaExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "SQSCreateLogsRolePolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "sqs:DeleteMessage",
                                        "sqs:GetQueueUrl",
                                        "sqs:ListQueues",
                                        "sqs:ChangeMessageVisibility",
                                        "sqs:SendMessageBatch",
                                        "sqs:ReceiveMessage",
                                        "sqs:SendMessage",
                                        "sqs:GetQueueAttributes",
                                        "sqs:ListQueueTags",
                                        "sqs:ListDeadLetterSourceQueues",
                                        "sqs:DeleteMessageBatch",
                                        "sqs:PurgeQueue",
                                        "sqs:DeleteQueue",
                                        "sqs:CreateQueue",
                                        "sqs:ChangeMessageVisibilityBatch",
                                        "sqs:SetQueueAttributes"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::GetAtt": [
                                                "SumoCWDeadLetterQueue",
                                                "Arn"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "CloudWatchCreateLogsRolePolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents",
                                        "logs:DescribeLogStreams"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                ":",
                                                [
                                                    "arn",
                                                    "aws",
                                                    "logs",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    "log-group",
                                                    "*"
                                                ]
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "PolicyName": "InvokeLambdaRolePolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "lambda:InvokeFunction"
                                    ],
                                    "Resource": [
                                        {
                                            "Fn::Join": [
                                                ":",
                                                [
                                                    "arn",
                                                    "aws",
                                                    "lambda",
                                                    {
                                                        "Ref": "AWS::Region"
                                                    },
                                                    {
                                                        "Ref": "AWS::AccountId"
                                                    },
                                                    "function",
                                                    "SumoCWProcessDLQLambda"
                                                ]
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "SumoCWLogsLambda": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": [
                "SumoCWLambdaExecutionRole",
                "SumoCWDeadLetterQueue"
            ],
            "Properties": {
                "FunctionName": {
                    "Fn::Sub": "labs-service-sumologic-${Stage}"
                },
                "Code": {
                    "S3Bucket": {
                        "Fn::FindInMap": [
                            "RegionMap",
                            {
                                "Ref": "AWS::Region"
                            },
                            "bucketname"
                        ]
                    },
                    "S3Key": "cloudwatchlogs-with-dlq.zip"
                },
                "Role": {
                    "Fn::GetAtt": [
                        "SumoCWLambdaExecutionRole",
                        "Arn"
                    ]
                },
                "Timeout": 300,
                "DeadLetterConfig": {
                    "TargetArn": {
                        "Fn::GetAtt": [
                            "SumoCWDeadLetterQueue",
                            "Arn"
                        ]
                    }
                },
                "Handler": "cloudwatchlogs_lambda.handler",
                "Runtime": "nodejs16.x",
                "MemorySize": 128,
                "Environment": {
                    "Variables": {
                        "SUMO_ENDPOINT": {
                            "Ref": "SumoEndPointURL"
                        },
                        "LOG_FORMAT": "VPC-JSON",
                        "INCLUDE_LOG_INFO": {
                            "Ref": "SumoIncludeLogGroupInfo"
                        }
                    }
                }
            }
        },
        "SumoCWEventsInvokeLambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Ref": "SumoCWProcessDLQLambda"
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "events.amazonaws.com",
                "SourceArn": {
                    "Fn::GetAtt": [
                        "SumoCWProcessDLQScheduleRule",
                        "Arn"
                    ]
                }
            }
        },
        "SumoCWProcessDLQScheduleRule": {
            "Type": "AWS::Events::Rule",
            "Properties": {
                "Description": "Events rule for Cron",
                "ScheduleExpression": "rate(5 minutes)",
                "State": "ENABLED",
                "Targets": [
                    {
                        "Arn": {
                            "Fn::GetAtt": [
                                "SumoCWProcessDLQLambda",
                                "Arn"
                            ]
                        },
                        "Id": "TargetFunctionV1"
                    }
                ]
            }
        },
        "SumoCWProcessDLQLambda": {
            "Type": "AWS::Lambda::Function",
            "DependsOn": [
                "SumoCWLambdaExecutionRole",
                "SumoCWDeadLetterQueue"
            ],
            "Properties": {
                "FunctionName": {
                    "Fn::Sub": "labs-service-sumologic-DLQ-${Stage}"
                },
                "Code": {
                    "S3Bucket": {
                        "Fn::FindInMap": [
                            "RegionMap",
                            {
                                "Ref": "AWS::Region"
                            },
                            "bucketname"
                        ]
                    },
                    "S3Key": "cloudwatchlogs-with-dlq.zip"
                },
                "Role": {
                    "Fn::GetAtt": [
                        "SumoCWLambdaExecutionRole",
                        "Arn"
                    ]
                },
                "Timeout": 300,
                "Handler": "DLQProcessor.handler",
                "DeadLetterConfig": {
                    "TargetArn": {
                        "Fn::GetAtt": [
                            "SumoCWDeadLetterQueue",
                            "Arn"
                        ]
                    }
                },
                "Runtime": "nodejs16.x",
                "MemorySize": 128,
                "Environment": {
                    "Variables": {
                        "SUMO_ENDPOINT": {
                            "Ref": "SumoEndPointURL"
                        },
                        "TASK_QUEUE_URL": {
                            "Fn::Join": [
                                "",
                                [
                                    "https://sqs.",
                                    {
                                        "Ref": "AWS::Region"
                                    },
                                    ".amazonaws.com/",
                                    {
                                        "Ref": "AWS::AccountId"
                                    },
                                    "/",
                                    {
                                        "Fn::GetAtt": [
                                            "SumoCWDeadLetterQueue",
                                            "QueueName"
                                        ]
                                    }
                                ]
                            ]
                        },
                        "NUM_OF_WORKERS": 4,
                        "LOG_FORMAT": "VPC-JSON",
                        "INCLUDE_LOG_INFO": {
                            "Ref": "SumoIncludeLogGroupInfo"
                        }
                    }
                }
            }
        }
    },
    "Outputs": {
        "SumoCWLogsLambdaArn": {
            "Description": "The ARN of the sumologic cloudwatch logs lambda",
            "Value": {
                "Fn::GetAtt": [
                    "SumoCWLogsLambda",
                    "Arn"
                ]
            },
            "Export": {
                "Name": "SumoCWLogsLambdaArn"
            }
        }
    }
}
